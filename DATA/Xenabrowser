# Import data using the data hub
# Data Hub List
# All datasets are available at https://xenabrowser.net/datapages/.

install.packages("UCSCXenaTools")
library(UCSCXenaTools)

data(XenaData)

head(XenaData)

# The options in XenaFilter function support Regular Expression
XenaGenerate(subset = XenaHostNames=="tcgaHub") %>% 
 XenaFilter(filterDatasets = "HNSC") %>%
 XenaFilter(filterDatasets = "clinical")  -> df_todo

df_todo

XenaQuery(df_todo) %>%
 XenaDownload() -> xe_download

#Prepare data into R for analysis.
# download 08/20/19
cli = XenaPrepare(xe_download)
class(cli)

 write.table(cli,"Data/Clinical_data_03_18_20.txt")
 write.csv(cli,"Data/Clinical_data_03_18_20.csv")
# CliTp <- read.csv("Clinical_data_08_20_19.csv")
#Browse data
XenaBrowse(df_todo)

XenaBrowse(df_todo, type = "cohort")

#%----------------------------------------------
# Get an other clinical from - access 10/23/20
# https://gdc.xenahubs.net/download/TCGA-HNSC.GDC_phenotype.tsv.gz; Full metadata
#*****************************************************
XenaGenerate(subset = XenaHostNames=="gdcHub") %>% 
  XenaFilter(filterDatasets = "HNSC") %>%
  XenaFilter(filterDatasets = "phenotype")  -> df_todoSurv

XenaQuery(df_todoSurv) %>%
  XenaDownload() -> xe_downloadSurv

cliniC = XenaPrepare(xe_downloadSurv)
class(cliniC)
dim(cliniC)

#-- Write data
write.csv(cliniC, "Data/Clinical102020.csv")

#*****************************************************
# Download survival data
# The options in XenaFilter function support Regular Expression
XenaGenerate(subset = XenaHostNames=="tcgaHub") %>% 
        XenaFilter(filterDatasets = "HNSC") %>%
        XenaFilter(filterDatasets = "survival")  -> df_todoSurv

df_todoSurv

XenaQuery(df_todoSurv) %>%
        XenaDownload() -> xe_downloadSurv

#Prepare data into R for analysis.
# download 08/20/19
cliSurv = XenaPrepare(xe_downloadSurv)
class(cliSurv)
write.table(cliSurv,"Data/Survival_data_03_18_20.txt")
write.csv(cliSurv,"Data/Survival_data_03_18_20.csv")
#Browse data
XenaBrowse(df_todoSurv)

XenaBrowse(df_todoSurv, type = "cohort")

#*****************************************************
#Download the miRNA data 
#*****************************************************
XenaGenerate(subset = XenaHostNames=="tcgaHub") %>% 
 XenaFilter(filterDatasets = "HNSC") %>%
 XenaFilter(filterDatasets = "miRNA")  -> df_miRNA

df_miRNA

tp = XenaQuery(df_miRNA)

XenaQuery(df_miRNA) %>%
 XenaDownload() -> xemiRNA_download

#Prepare data into R for analysis.
# download 08/20/19
gdcHub_miRNA = XenaPrepare(xemiRNA_download)
class(gdcHub_miRNA$miRNA_HiSeq_gene.gz)
write.table(gdcHub_miRNA$miRNA_HiSeq_gene.gz,"Data/miRNA_data_03_18_20.txt")
write.csv(gdcHub_miRNA$miRNA_HiSeq_gene.gz,"Data/miRNA_data_03_18_20.csv")

#Browse data
XenaBrowse(df_miRNA)

XenaBrowse(df_miRNA, type = "cohort")

#*****************************************************
#Download the mRNA data 
#*****************************************************
XenaGenerate(subset = XenaHostNames=="tcgaHub") %>% 
  XenaFilter(filterDatasets = "HNSC") %>%
  XenaFilter(filterDatasets = "HiseqV2")  -> df_mRNACounts

df_mRNACounts@datasets[3]

XenaQuery(df_mRNACounts) %>%
  XenaDownload() -> df_mRNACounts_download

#Prepare data into R for analysis.
# download 04/16/20
gdcHub_mRNACounts = XenaPrepare(df_mRNACounts_download[3,])
class(gdcHub_mRNACounts)
write.table(gdcHub_mRNACounts,"F:/HNSC_RWorkSpace/mRNA_dataRSEM_04_16_20.txt")
write.csv(gdcHub_mRNACounts,"F:/HNSC_RWorkSpace/mRNA_dataRSEM_04_16_20.csv")

dim(gdcHub_mRNACounts)
head(gdcHub_mRNACounts[,1:10])

mRNAData <- gdcHub_mRNACounts


#*****************************************************
#Download the mRNA data 
#*****************************************************
XenaGenerate(subset = XenaHostNames=="gdcHub") %>% 
        XenaFilter(filterDatasets = "HNSC") %>%
        XenaFilter(filterDatasets = "htseq_counts")  -> df_mRNACounts

df_mRNACounts

XenaQuery(df_mRNACounts) %>%
        XenaDownload() -> df_mRNACounts_download

#Prepare data into R for analysis.
# download 08/20/19
gdcHub_mRNACounts = XenaPrepare(df_mRNACounts_download)
class(gdcHub_mRNACounts)
write.table(gdcHub_mRNACounts,"mRNA_dataCounts_08_20_19.txt")
write.csv(gdcHub_mRNACounts,"miRNA_dataCounts_08_20_19.csv")


#*****************************************************
XenaGenerate(subset = XenaHostNames=="gdcHub") %>% 
        XenaFilter(filterDatasets = "HNSC") %>%
        XenaFilter(filterDatasets = "htseq_fpkm.") -> df_mRNAfpkm

df_mRNAfpkm
df_mRNAfpkm@datasets<-df_mRNAfpkm@datasets[1]
df_mRNAfpkm@datasets

XenaQuery(df_mRNAfpkm) %>%
        XenaDownload() -> df_mRNAfpkm_download

#Prepare data into R for analysis.
# download 08/20/19
gdcHub_mRNAfpkm = XenaPrepare(df_mRNAfpkm_download)
class(gdcHub_mRNAfpkm)
write.table(gdcHub_mRNAfpkm,"mRNA_datafpkm_08_20_19.txt")
write.csv(gdcHub_mRNAfpkm,"miRNA_datafpkm_08_20_19.csv")






#Browse data
XenaBrowse(df_miRNA)

XenaBrowse(df_miRNA, type = "cohort")




# The options in XenaFilter function support Regular Expression
XenaGenerate(subset = XenaHostNames=="tcgaHub") %>% 
 XenaFilter(filterDatasets = "clinical") %>% 
 XenaFilter(filterDatasets = "LUAD|LUSC|LUNG") -> df_todo

df_todo
